/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Controller;
import Model.HeaderTableModel;
import Model.InvoiceHeader;
import Model.LineTableModel;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTable;

/**
 *
 * @author pc
 */
public class SalesInvoiceGeneratorFWDFrame extends javax.swing.JFrame {

    /**
     * Creates new form SalesInvoiceGeneratorFWDFrame
     */
    public SalesInvoiceGeneratorFWDFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        headerTable = new javax.swing.JTable();
        headerTable.getSelectionModel().addListSelectionListener(listener);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        InvDataLbl = new javax.swing.JLabel();
        InvNoLbl = new javax.swing.JLabel();
        CustomerNameLbl = new javax.swing.JLabel();
        InvTotalLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lineTable = new javax.swing.JTable();
        createNewInv = new javax.swing.JButton();
        createNewInv.addActionListener(listener);
        deleteInv = new javax.swing.JButton();
        deleteInv.addActionListener(listener);
        createItem = new javax.swing.JButton();
        createItem.addActionListener(listener);
        deleteItem = new javax.swing.JButton();
        deleteItem.addActionListener(listener);
        jMenuBar1 = new javax.swing.JMenuBar();
        mainMenu = new javax.swing.JMenu();
        loadMainMenu = new javax.swing.JMenuItem();
        loadMainMenu.addActionListener(listener);
        saveMainMenu = new javax.swing.JMenuItem();
        saveMainMenu.addActionListener(listener);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(headerTable);

        jLabel1.setText("Inocie No");

        jLabel2.setText("Invoice Date");

        jLabel3.setText("Customer Name");

        jLabel4.setText("InvoiceTotal");

        InvDataLbl.setText("jLabel5");

        InvNoLbl.setText("jLabel6");

        CustomerNameLbl.setText("jLabel7");

        InvTotalLbl.setText("jLabel8");

        lineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(lineTable);

        createNewInv.setText("Create New Invoice");

        deleteInv.setText("Delete Invoice");
        deleteInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInvActionPerformed(evt);
            }
        });

        createItem.setText("Create Item");

        deleteItem.setText("Delete Item");

        mainMenu.setText("File");

        loadMainMenu.setText("Load");
        loadMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMainMenuActionPerformed(evt);
            }
        });
        mainMenu.add(loadMainMenu);

        saveMainMenu.setText("Save");
        saveMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMainMenuActionPerformed(evt);
            }
        });
        mainMenu.add(saveMainMenu);

        jMenuBar1.add(mainMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InvNoLbl)
                                    .addComponent(InvDataLbl)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InvTotalLbl)
                                    .addComponent(CustomerNameLbl))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(createNewInv)
                .addGap(54, 54, 54)
                .addComponent(deleteInv)
                .addGap(178, 178, 178)
                .addComponent(createItem)
                .addGap(79, 79, 79)
                .addComponent(deleteItem)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createNewInv)
                            .addComponent(deleteInv)
                            .addComponent(createItem)
                            .addComponent(deleteItem)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(InvNoLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(InvDataLbl))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(CustomerNameLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(InvTotalLbl))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMainMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMainMenuActionPerformed

    private void deleteInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteInvActionPerformed

    private void loadMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMainMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadMainMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFWDFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFWDFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFWDFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFWDFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesInvoiceGeneratorFWDFrame().setVisible(true);
                SalesInvoiceGeneratorFWDFrame obj = new SalesInvoiceGeneratorFWDFrame();
                obj.listener.load("InvoiceHeader.csv", "InvoiceLine.csv");
                obj.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CustomerNameLbl;
    private javax.swing.JLabel InvDataLbl;
    private javax.swing.JLabel InvNoLbl;
    private javax.swing.JLabel InvTotalLbl;
    private javax.swing.JButton createItem;
    private javax.swing.JButton createNewInv;
    private javax.swing.JButton deleteInv;
    private javax.swing.JButton deleteItem;
    private javax.swing.JTable headerTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable lineTable;
    private javax.swing.JMenuItem loadMainMenu;
    private javax.swing.JMenu mainMenu;
    private javax.swing.JMenuItem saveMainMenu;
    // End of variables declaration//GEN-END:variables
    private Controller listener = new Controller(this);
    private ArrayList<InvoiceHeader> invoices = new ArrayList<>();
    public static DateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
    private HeaderTableModel headerTableModel;
    private LineTableModel lineTableModel;

    
        public int getNxInvNum() {
        int num = -1;
        for (InvoiceHeader inv : getInvoices()) {
            num = Math.max(num, inv.getNum());
        }
        return ++num;
    }
        
    public LineTableModel getLineTableModel() {
        return lineTableModel;
    }

    public void setLineTableModel(LineTableModel lineTableModel) {
        this.lineTableModel = lineTableModel;
        lineTable.setModel(lineTableModel);
    }

    public HeaderTableModel getHeaderTableModel() {
        return headerTableModel;
    }

    public void setHeaderTableModel(HeaderTableModel headerTableModel) {
        this.headerTableModel = headerTableModel;
        headerTable.setModel(headerTableModel);
    }

    public Controller getListener() {
        return listener;
    }

    public JLabel getCustomerNameLbl() {
        return CustomerNameLbl;
    }

    public JLabel getInvDataLbl() {
        return InvDataLbl;
    }

    public JLabel getInvNoLbl() {
        return InvNoLbl;
    }

    public JLabel getInvTotalLbl() {
        return InvTotalLbl;
    }

    public JTable getHeaderTable() {
        return headerTable;
    }

    public JTable getLineTable() {
        return lineTable;
    }

    public ArrayList<InvoiceHeader> getInvoices() {
        if (invoices == null) {
            invoices = new ArrayList<>();
        }
        return invoices;
    }

    public InvoiceHeader getInvoiceByNum(int num) {
        for (InvoiceHeader INV : invoices) {
            if (INV.getNum() == num) {
                return INV;
            }
        }
        return null;
    }

}
